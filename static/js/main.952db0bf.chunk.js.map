{"version":3,"sources":["stateProvider.js","reducer.js","components/detailsBar/DetailsBar.js","components/shapeCreater/ShapeCreater.js","App.js","reportWebVitals.js","index.js"],"names":["StateContext","createContext","PositionSetContext","PositionDisplayContext","StateProvider","reducer","initialState","children","useState","mouseX","setMouseX","mouseY","setMouseY","name","setName","deletButton","setButton","Provider","value","useReducer","useStateValue","useContext","addNewShape","shapeName","height","width","xPosition","yPosition","elements","actionTypes","SET_NEWSHAPE","SET_SHAPENAME","SET_HEIGHT","SET_WIDTH","SET_XPOSITION","SET_YPOSITION","SET_ELEMENT","SET_DELETE","RESET","state","action","type","Details","dispatch","className","onClick","ShapeCreater","inputChangeHandler","e","preventDefault","target","parameters","split","useEffect","placeholder","onChange","alert","App","selectedShapeId","setSelectedShapeId","showTailSnackBar","setTailSnackBar","onClickHandler","id","setTimeout","map","element","index","style","Number","position","top","left","backgroundColor","border","onMouseOver","onMouseOverHandler","newElements","filter","ele","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.952db0bf.chunk.js","sourcesContent":["import React, {createContext, useReducer,useContext,useState} from \"react\"\r\n\r\nexport const StateContext = createContext()\r\nexport const PositionSetContext = createContext()\r\nexport const PositionDisplayContext = createContext()\r\n\r\nexport const StateProvider = ({ reducer,initialState,children }) => {\r\n    const [mouseX,setMouseX] = useState();\r\n    const [mouseY,setMouseY] = useState();\r\n    const [name,setName] = useState(\"--\");\r\n    const [deletButton,setButton] = useState(false)\r\n\r\n    return(\r\n        <StateContext.Provider value={ useReducer(reducer, initialState) }>\r\n            <PositionSetContext.Provider value={{ setMouseY,setMouseX,setName,setButton}}>\r\n                <PositionDisplayContext.Provider value={{mouseX,mouseY,name,deletButton}}>\r\n                    {children} \r\n                </PositionDisplayContext.Provider>   \r\n            </PositionSetContext.Provider>\r\n        </StateContext.Provider>  \r\n    )\r\n}\r\n\r\nexport const useStateValue = () => useContext(StateContext)\r\n\r\n","export const initialState = {\r\n    addNewShape:false,\r\n    shapeName:'',\r\n    height:'',\r\n    width:'',\r\n    xPosition:'',\r\n    yPosition:'',\r\n    elements:[],\r\n}\r\n\r\nexport const actionTypes = {\r\n    SET_NEWSHAPE:\"SET_NEWSHAPE\",\r\n    SET_SHAPENAME:\"SET_SHAPENAME\",\r\n    SET_HEIGHT:\"SET_HEIGHT\",\r\n    SET_WIDTH:\"SET_WEIGHT\",\r\n    SET_XPOSITION:\"SET_XPOSITION\",\r\n    SET_YPOSITION:\"SET_YPOSITION\",\r\n    SET_ELEMENT:\"SET_ELEMENT\",\r\n    SET_DELETE:\"SET_DELETE\",\r\n    RESET:\"RESET\"\r\n}\r\n\r\nconst reducer = (state,action)=>{\r\n    \r\n    switch(action.type){\r\n        case actionTypes.SET_NEWSHAPE:\r\n            return{\r\n                ...state,\r\n                addNewShape:action.addNewShape\r\n            }\r\n        case actionTypes.SET_SHAPENAME:\r\n            return{\r\n                ...state,\r\n                shapeName:action.shapeName\r\n            }\r\n        case actionTypes.SET_HEIGHT:\r\n            return{\r\n                ...state,\r\n                height:action.height\r\n            }\r\n        case actionTypes.SET_WIDTH:\r\n            return{\r\n                ...state,\r\n                width:action.width\r\n            }\r\n        case actionTypes.SET_XPOSITION:\r\n            return{\r\n                ...state,\r\n                xPosition:action.xPosition\r\n            }\r\n        case actionTypes.SET_YPOSITION:\r\n            return{\r\n                ...state,\r\n                yPosition:action.yPosition\r\n            }\r\n        case actionTypes.SET_ELEMENT:\r\n                return{\r\n                    ...state,\r\n                    elements:[...state.elements,action.elements]\r\n                }\r\n        case actionTypes.RESET:\r\n            return{\r\n                ...initialState,\r\n                elements:[...state.elements]\r\n            }\r\n        case actionTypes.SET_DELETE:\r\n            return{\r\n                ...state,\r\n                elements:action.elements\r\n            }\r\n        default:\r\n            return state;\r\n        \r\n    }\r\n}\r\n\r\nexport default reducer;","import React, { useContext } from 'react'\r\nimport { useStateValue, PositionDisplayContext,PositionSetContext } from \"../../stateProvider\"\r\nimport { actionTypes } from \"../../reducer\"\r\n\r\nfunction Details () {\r\n    const [{addNewShape},dispatch] = useStateValue()\r\n    const {mouseX,mouseY,name} = useContext(PositionDisplayContext)\r\n    const { setButton } = useContext( PositionSetContext )\r\n\r\n    function addShapeHandler () {\r\n        dispatch({\r\n            type:actionTypes.SET_NEWSHAPE,\r\n            addNewShape:!addNewShape,\r\n        })\r\n        setButton(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"detailsBar\">\r\n            <div className=\"detailsBarHeader gridLine\">\r\n                <h4>Details</h4>\r\n            </div>\r\n            <div className=\"shapName gridLine\">\r\n                <p>{name}</p>\r\n            </div>\r\n            <div className=\"xPositionDisplay gridLine\">\r\n                <p>Mouse X - <span>{mouseX}</span></p>\r\n            </div>\r\n            <div className=\"yPositionDisplay gridLine\">\r\n                <p>Mouse Y - <span>{mouseY}</span></p>\r\n            </div>\r\n            <button className=\"addShapeButton\" onClick={addShapeHandler}>\r\n                +Add a shape\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import React, { useEffect } from 'react'\r\nimport { useStateValue } from '../../stateProvider'\r\nimport { actionTypes } from '../../reducer'\r\n\r\nexport default function ShapeCreater () {\r\n    const [{ addNewShape, shapeName, height, width, xPosition, yPosition },dispatch] = useStateValue();\r\n\r\n    function inputChangeHandler (e) {\r\n\r\n        e.preventDefault()\r\n        const {name,value} = e.target\r\n        const action = {}\r\n        const parameters = name.split(\" \")\r\n        action.type = actionTypes[parameters[1]]\r\n        action[parameters[0]]=value;\r\n        dispatch(action)\r\n\r\n    }\r\n\r\n    function createElementHandler () {\r\n\r\n        if(shapeName === \"\" || height === \"\" || width \r\n            === \"\" || xPosition === \"\" || yPosition === \"\"){\r\n                alert(\"Need all manditory fields to filled\")\r\n        }else{\r\n                dispatch({\r\n                type:actionTypes.SET_ELEMENT,\r\n                elements:{shapeName,height,width,xPosition,yPosition}\r\n                })\r\n                dispatch({\r\n                    type:actionTypes.SET_NEWSHAPE,\r\n                    addNewShape:!addNewShape,\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    function closeButtonHandler () {\r\n\r\n        dispatch({\r\n            type:actionTypes.SET_NEWSHAPE,\r\n            addNewShape:!addNewShape,\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            dispatch({\r\n                type:actionTypes.RESET,\r\n            })\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"background\">\r\n            <div className=\"shapeCreaterContainer\">\r\n                <div className=\"shapeCreaterHeader\">\r\n                    <h1>Create Shape</h1>\r\n                    <button className=\"shapeCreaterCloseButton\" onClick={closeButtonHandler}>\r\n                        X\r\n                    </button>  \r\n                </div>\r\n                <div className=\"inputFormForShapeDimensions\">\r\n                    <div className=\"nameOfShape\">\r\n                        <p>Name of Shape</p>\r\n                        <input \r\n                        name=\"shapeName SET_SHAPENAME\"\r\n                        placeholder=\"Enter shape name\"\r\n                        value={shapeName}\r\n                        onChange={inputChangeHandler}/>\r\n                    </div>\r\n                    <div className=\"inputs\">\r\n                        <p>Height</p>\r\n                        <input \r\n                        type=\"number\"\r\n                        name=\"height SET_HEIGHT\"\r\n                        placeholder=\"Enter height\"\r\n                        value={height}\r\n                        onChange={inputChangeHandler}/>\r\n                    </div>\r\n                    <div className=\"inputs\">\r\n                        <p>Width</p>\r\n                        <input \r\n                        type=\"number\"\r\n                        name=\"width SET_WIDTH\"\r\n                        placeholder=\"Enter Weight\"\r\n                        value={width}\r\n                        onChange={inputChangeHandler}/>\r\n                    </div>\r\n                    <div className=\"inputs\">\r\n                        <p>X position</p>\r\n                        <input \r\n                        type=\"number\"\r\n                        name=\"xPosition SET_XPOSITION\"\r\n                        placeholder=\"Enter X value\"\r\n                        value={xPosition}\r\n                        onChange={inputChangeHandler}/>\r\n                    </div>\r\n                    <div className=\"inputs\">\r\n                        <p>Y position</p>\r\n                        <input \r\n                        type=\"number\"\r\n                        name=\"yPosition SET_YPOSITION\"\r\n                        placeholder=\"Enter Y value\"\r\n                        value={yPosition}\r\n                        onChange={inputChangeHandler}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"createNewShapeButtonContainer\">\r\n                    <button className=\"createNewShapeButton\" onClick={createElementHandler}>Create New Shape</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React, { useContext,useEffect,useState } from 'react'\nimport './App.scss';\nimport Details from './components/detailsBar/DetailsBar'\nimport ShapeCreater from './components/shapeCreater/ShapeCreater'\nimport './style/main.scss'\nimport { useStateValue } from \"./stateProvider\"\nimport { PositionSetContext,PositionDisplayContext } from \"./stateProvider\"\nimport { actionTypes } from \"./reducer\"\n\nfunction App () {\n  const [{ addNewShape,elements },dispatch] = useStateValue()\n  const { setMouseX, setMouseY, setName, setButton } = useContext(PositionSetContext)\n  const { deletButton } = useContext(PositionDisplayContext)\n  const [selectedShapeId,setSelectedShapeId] = useState('')\n  const [showTailSnackBar,setTailSnackBar] = useState(true)\n\n  function onClickHandler (e) {\n\n    e.preventDefault()\n    if(e.target.id === selectedShapeId){\n      setSelectedShapeId('')\n      setButton(false)\n    }else{\n      setSelectedShapeId(e.target.id)\n      setButton(true)\n    } \n\n  }\n\n  // newly added delete functionality\n  function deleteClickHandler () {\n\n    const newElements = elements.filter((ele,index)=> ele.shapeName !== selectedShapeId )\n    dispatch({\n      type:actionTypes.SET_DELETE,\n      elements:newElements,\n    })\n    setButton(false)\n    setSelectedShapeId('')\n    setMouseX('')\n    setMouseY('')\n    setName(\"--\")\n\n  }\n\n  function onMouseOverHandler ( element ){\n\n    setMouseX(element.xPosition)\n    setMouseY(element.yPosition)\n    setName(element.shapeName)\n\n  }\n\n  useEffect(()=>{\n    setTimeout(()=>setTailSnackBar(false),3000)\n  },[])\n\n  return (\n    <div className=\"App\">\n    {addNewShape && addNewShape ? <ShapeCreater/>:<Details/>}\n    {elements && elements.map((element,index)=>\n      <div key={index} style={{\n        height:`${Number(element.height)}px`,\n        width:`${Number(element.width)}px`,\n        position:'absolute',\n        top:`${Number(element.xPosition)}px`,\n        left:`${Number(element.yPosition)}px`,\n        backgroundColor:\"#0948EA33\",\n        border:`${selectedShapeId === element.shapeName ? \"1px solid blue\":\"none\"}`}} \n        id={element.shapeName}\n        onMouseOver={()=>onMouseOverHandler(element)}\n        onClick={onClickHandler}>\n      </div>)\n    }\n    {deletButton && <button className=\"deleteButton\" onClick={deleteClickHandler}> Delete </button>}\n    {showTailSnackBar && <div className=\"tailSnackBar\">Slect the shape to <strong>Delete</strong> it</div>}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, { initialState } from './reducer'\nimport { StateProvider } from './stateProvider'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}